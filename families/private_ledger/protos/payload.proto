// Copyright 2017 Intel Corporation
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
// -----------------------------------------------------------------------------

syntax = "proto3";

// Private Ledger Transaction Payload
message PrivateLedgerPayload {
    // The action indicates data is contained within this payload
    enum Action {
        CREATE_ASSET = 0;
        OPEN_AUCTION = 1;
        CLOSE_AUCTION = 2;
        BID = 3;
    }


    // Payload for Asset issuance
    message CreateAssetPayload {
        string name = 1; // The name of the asset
        string nonce = 2; // A random value to ensure Asset uniqueness
    }
    message OpenAuctionPayload {
        string asset = 1; // The address of the asset to be auctioned
        int64 minimum_bid = 2; // The minimum bid amount to accept.
    }
    message CloseAuctionPayload {
        string asset = 1; // The address of the asset's auction to be closed.
    }
    message BidPayload {
        string asset = 1; // The address of the asset to bid on.
        int64 amount; // the amount to bid
    }

    // Payload for transfering Assets
    message  {
        string recipient = 1; // The public key of the recepient
        string asset_type = 2; // The address of the AssetType to transfer
        int64 amount = 3; // the amount to send to the recipient
    }

    // The action of this payload
    Action action = 1;

    // The content of this payload
    CreateAsset create_asset;
    OpenAuctionPayload open_auction;
    CloseAuctionPayload close_auction;
    BidPayload bid;
}
